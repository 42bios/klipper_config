#####################################################################
#  Macros
#####################################################################
## Initial plate offset at klipper start
[delayed_gcode _delay_INIT_PLATE]
initial_duration: 1
gcode:
  _INIT_PLATE

[gcode_macro _INIT_PLATE]
## plate array: you can add as many plates as you need
## each must be like ('name', value)
## the display menu will change automaticly
##
## a [save_variables] block is needed since a printer save variable needs to be used to have it avalible
## after power up
## add plate_index = 2 to that file 
##
## plate_name and z_offset can be used anywhere use
## {% set plate_offset_z = printer["gcode_macro _INIT_PLATE"].plate[printer.save_variables.variables.plate_index|int][1] %}
## {% set plate_name = printer["gcode_macro _INIT_PLATE"].plate[printer.save_variables.variables.plate_index|int][0] %}
## to get the values
##
variable_plate: [('Mueller', 0.3), ('Energetics', 0.0), ('Texture', 0.35), ('En Thick', 0.30)]
gcode:
  {% set plate_offset_z = printer["gcode_macro _INIT_PLATE"].plate[printer.save_variables.variables.plate_index|int][1] %}
  {% set plate_name = printer["gcode_macro _INIT_PLATE"].plate[printer.save_variables.variables.plate_index|int][0] %}
  SET_GCODE_OFFSET Z=0
  SET_GCODE_OFFSET Z_ADJUST={plate_offset_z|float}
  M117 Plate: {plate_name}
  {action_respond_info("Init Plate: %s --> set z_offset: %.3f" % (plate_name|string, plate_offset_z|float))}
  UPDATE_DELAYED_GCODE ID=_CLEAR_DISPLAY DURATION=10

#####################################################################
#  Display Menu
#####################################################################
## FlexPlate selection
[menu __main __flexplate]
type: list
name: Flexplate
enable: {not printer.idle_timeout.state == "Printing"}
index: 1

[menu __main __flexplate __act]
type: command
name:  Act: {printer["gcode_macro _INIT_PLATE"].plate[printer.save_variables.variables.plate_index|int][0]} 

[menu __main __flexplate __set]
type: input
name:  Set: {printer["gcode_macro _INIT_PLATE"].plate[menu.input|int][0]}
input: {printer.save_variables.variables.plate_index|int}
input_min: 0
input_max: {(printer["gcode_macro _INIT_PLATE"].plate | length) - 1}
gcode:
  {%- if menu.event == 'long_click' -%}
    SAVE_VARIABLE VARIABLE=plate_index VALUE={'%d' % menu.input|int}
    _INIT_PLATE
  {%- endif -%}